<?xml version="1.0"?>
<robot name="amr_bot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Middle Drive Wheels -->
  <gazebo reference="wheel_left_link">
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
    <kp>1000000000000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <gazebo reference="wheel_right_link">
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
    <kp>1000000000000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <!-- Caster Wheels -->
  <gazebo reference="caster_wheel_front">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <gazebo reference="caster_wheel_rear">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <gazebo reference="caster1_wheel_front">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <gazebo reference="caster2_wheel_rear">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <!-- Diff Drive Plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive">
      <ros>
        <namespace>/amr_controller</namespace>
        <remapping>cmd_vel:=/amr_controller/cmd_vel</remapping>
      </ros>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.322</wheel_separation>
      <wheel_radius>0.08</wheel_radius>
      <odom_frame>odom</odom_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <update_rate>50</update_rate>
      <max_wheel_torque>10.0</max_wheel_torque>
    </plugin>
  </gazebo>


  <!-- ROS 2 Control -->
  <gazebo>
    <!-- Ignition plugin for ROS2 Control -->
    <xacro:if value="$(arg is_ignition)">
        <plugin filename="libign_ros2_control-system.so" name="ign_ros2_control::IgnitionROS2ControlPlugin">
        <parameters>$(find amr_controller)/config/amr_controllers.yaml</parameters>
      </plugin>
      <plugin filename="ignition-gazebo-imu-system" name="ignition::gazebo::systems::Imu">
      </plugin>
      <plugin filename="ignition-gazebo-sensors-system" name="ignition::gazebo::systems::Sensors">
        <render_engine>ogre2</render_engine>
      </plugin>
    </xacro:if>

    <!-- Gazebo plugin for ROS2 Control -->
    <xacro:unless value="$(arg is_ignition)">
        <plugin filename="libgz_ros2_control-system.so" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
        <parameters>$(find amr_controller)/config/amr_controllers.yaml</parameters>
      </plugin>
      <plugin filename="gz-sim-imu-system" name="gz::sim::systems::Imu">
      </plugin>
      <plugin filename="gz-sim-sensors-system" name="gz::sim::systems::Sensors">
        <render_engine>ogre2</render_engine>
      </plugin>
    </xacro:unless>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor name="imu" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <gz_frame_id>imu_link</gz_frame_id>
        <topic>imu</topic>
        <imu>
          <angular_velocity>
          <x>
            <noise type="guassian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
           <y>
            <noise type="guassian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="guassian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="guassian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="guassian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="guassian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
          </imu>
    </sensor>
  </gazebo>
  <!-- Lidar Sensor Plugin -->
  <gazebo reference="laser_link">
    <sensor name="lidar" type="gpu_ray">
      <always_on>true</always_on>
      <update_rate>5</update_rate>
      <topic>scan</topic>
      <visualize>true</visualize>
      <gz_frame_id>laser_link</gz_frame_id>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.0</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.12</min>
          <max>12.0</max>
          <resolution>0.02</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="lidar_plugin" filename="gz-sim-sensor-system">
        <ros>
          <remapping>~/scan:=/scan</remapping>
        </ros>
        <frameName>lidar</frameName>
      </plugin>
    </sensor>
  </gazebo>
</robot>
